# INI configuration is very powerful and flexible, while still remaining succinct.
# Please http://shiro.apache.org/configuration.html and
# http://shiro.apache.org/web.html for more.

[main]
listener = org.apache.shiro.config.event.LoggingBeanEventListener

shiro.loginUrl = /login.jsp
shiro.postOnlyLogout = true

# jdbc realm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT password from "user" where user_name = ?
jdbcRealm.userRolesQuery = select role_name from user_role where user_id = (select id FROM "user" WHERE user_name = ?)
jdbcRealm.permissionsQuery = select permission_name from subject_permission where subject_name = ?
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.cachingEnabled = true

ds = org.postgresql.ds.PGPoolingDataSource
ds.serverName = 172.16.12.10
ds.portNumber = 5432
ds.databaseName = sample
ds.maxConnections = 100
ds.user = dbadmin
ds.password = dbadmin
jdbcRealm.dataSource= $ds

# define a cache
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager

# define web session manager
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager

# configure security manager
securityManager.sessionManager = $sessionManager
securityManager.sessionManager.sessionIdUrlRewritingEnabled = false
securityManager.realms = $jdbcRealm
securityManager.cacheManager = $cacheManager

# We need to set the cipherKey, if you want the rememberMe cookie to work after restarting or on multiple nodes.
# (TODO: change this string) YOU MUST SET THIS TO A UNIQUE STRING
securityManager.rememberMeManager.cipherKey = kPH+bIxk5D2deZiIxcaaaA==

[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
/login.jsp = authc
/logout = logout
#/remoting/** = authc, roles[b2bClient], perms["remote:invoke:lan,wan"]
/api/rest/** = authc